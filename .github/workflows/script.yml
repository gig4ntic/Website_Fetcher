name: Check Stallpl√§tze

on:
  schedule:
    - cron: '*/60 * * * *'
  workflow_dispatch: # Manuell ausf√ºhrbar

jobs:
  check_stalls:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4

      - name: Run script and check for changes
        id: check_stalls
        run: |
          python -m fetch  # Korrigierter Befehl

          # Vergleichen mit vorherigem Wert aus freeplaces.txt
          if [ -f "${{ github.workspace }}/freeplaces.txt" ]; then
            PREVIOUS_STALLS=$(cat "${{ github.workspace }}/freeplaces.txt")
          else
            PREVIOUS_STALLS=""
          fi

          CURRENT_STALLS=$(cat "${{ github.workspace }}/freeplaces.txt")

          # Pr√ºfe, ob sich etwas ge√§ndert hat
          if [ -z "$PREVIOUS_STALLS" ]; then
            echo "changed=true" >> "$GITHUB_ENV"
            echo "::set-output name=changed::true"
          elif [ "$CURRENT_STALLS" != "$PREVIOUS_STALLS" ]; then
            echo "changed=true" >> "$GITHUB_ENV"
            echo "::set-output name=changed::true"
          else
            echo "changed=false" >> "$GITHUB_ENV"
            echo "::set-output name=changed::false"
          fi

          # Speichere die Anzahl der freien Stallpl√§tze
          echo "::set-output name=free_stalls::$CURRENT_STALLS"

          # Speichere die Datei als Artefakt
          mkdir -p ./artifacts
          cp freeplaces.txt ./artifacts/

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: stallplaetze-artifact
          path: ./artifacts/

  notify:
    runs-on: ubuntu-latest
    needs: check_stalls
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: stallplaetze-artifact
          path: ./artifacts/

      - name: Discord Notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          # Stelle die freeplaces.txt aus dem Artefakt wieder her
          cp ./artifacts/freeplaces.txt .

          # Lese den aktuellen Wert aus der Datei
          CURRENT_STALLS=$(cat freeplaces.txt)

          # Pr√ºfe, ob sich etwas ge√§ndert hat
          if [ "${{ needs.check_stalls.outputs.changed }}" == "true" ]; then
            MESSAGE="@gig4ntic Die Anzahl der freien Stallpl√§tze hat sich ge√§ndert! üö® Aktuell sind **$CURRENT_STALLS** Pl√§tze frei."
          else
            MESSAGE="‚ÑπÔ∏è Die Anzahl der freien Stallpl√§tze hat sich **nicht** ge√§ndert. Aktuell sind weiterhin **$CURRENT_STALLS** Pl√§tze frei."
          fi

          # Sende die Nachricht an Discord
          curl -H "Content-Type: application/json" -X POST -d "{\"content\": \"$MESSAGE\"}" "${{ secrets.DISCORD_WEBHOOK_URL }}"
