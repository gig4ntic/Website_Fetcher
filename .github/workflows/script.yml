name: Check Stallpl√§tze

on:
  schedule:
    - cron: '*/60 * * * *'
  workflow_dispatch:

jobs:
  check_and_notify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4
      
      - name: Fetch new stall count and store in new_places.txt
        run: |
          python -m fetch  # Das Python-Skript schreibt standardm√§√üig freeplaces.txt
          mv freeplaces.txt new_places.txt
      
      - name: Compare new and old stall counts
        id: compare
        run: |
          # Lade alten Wert aus old_places.txt, falls vorhanden; ansonsten "?" als Platzhalter
          if [ -f old_places.txt ]; then
              OLD=$(cat old_places.txt | tr -d '[:space:]')
          else
              OLD="?"
          fi
          # Lese den neuen Wert aus new_places.txt und entferne Whitespace
          NEW=$(cat new_places.txt | tr -d '[:space:]')
          
          echo "Old value: '$OLD'"
          echo "New value: '$NEW'"
          
          # Bestimme, ob sich der Wert ge√§ndert hat
          if [ "$OLD" = "?" ]; then
              CHANGED="true"
          elif [ "$NEW" != "$OLD" ]; then
              CHANGED="true"
          else
              CHANGED="false"
          fi
          
          echo "changed=$CHANGED" >> $GITHUB_OUTPUT
          echo "old_value=$OLD" >> $GITHUB_OUTPUT
          echo "new_value=$NEW" >> $GITHUB_OUTPUT
      
      - name: Send Discord Notification
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          OLD="${{ steps.compare.outputs.old_value }}"
          NEW="${{ steps.compare.outputs.new_value }}"
          CHANGED="${{ steps.compare.outputs.changed }}"
          
          if [ "$CHANGED" = "true" ]; then
            MESSAGE="@299619374602518529 üö® Die Anzahl der freien Stallpl√§tze hat sich ge√§ndert! üö®\nVorher: **$OLD**\nJetzt: **$NEW**"
          else
            MESSAGE="‚ÑπÔ∏è Keine √Ñnderung der freien Stallpl√§tze.\nAktuell sind **$NEW** Pl√§tze frei."
          fi
          
          echo "Sending Discord notification: $MESSAGE"
          curl -H "Content-Type: application/json" -X POST -d "{\"content\": \"$MESSAGE\"}" "${DISCORD_WEBHOOK_URL}"
      
      - name: Update old_places.txt
        run: |
          cp new_places.txt old_places.txt
      
      - name: Commit and push updated old_places.txt
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add old_places.txt
          git commit -m "Update old_places.txt with new stall count: $(cat old_places.txt) freie Pl√§tze" || echo "No changes to commit"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
