name: Check Stallplätze

on:
  schedule:
    - cron: '*/60 * * * *'
  workflow_dispatch: # manuell ausführbar

jobs:
  check_stalls:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests beautifulsoup4
      - name: Run script and check for changes
        id: check_stalls
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          python -m fetch  # Korrigierter Befehl

          # Vergleichen mit vorherigem Wert aus freeplaces.txt
          if [ -f "${{ github.workspace }}/freeplaces.txt" ]; then
            PREVIOUS_STALLS=$(cat "${{ github.workspace }}/freeplaces.txt")
          else
            PREVIOUS_STALLS=""
          fi

          CURRENT_STALLS=$(cat "${{ github.workspace }}/freeplaces.txt")

          # Prüfe, ob PREVIOUS_STALLS leer ist
          if [ -z "$PREVIOUS_STALLS" ]; then
            echo "::set-output name=changed::true"
          # Führe den Vergleich nur durch, wenn PREVIOUS_STALLS nicht leer ist
          elif [ "$CURRENT_STALLS"!= "$PREVIOUS_STALLS" ]; then
            echo "::set-output name=changed::true"
          fi

          # Speichere die aktualisierte freeplaces.txt als Artefakt
          echo "::set-output name=free_stalls::$CURRENT_STALLS"
          mkdir -p./artifacts
          cp freeplaces.txt./artifacts/

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: stallplaetze-artifact
          path:./artifacts/

      - name: Discord Notification
        if: steps.check_stalls.outputs.changed == 'true'
        needs: check_stalls # Benötigt den vorherigen Schritt
        uses: actions/download-artifact@v3
        with:
          name: stallplaetze-artifact
          path:./artifacts/
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          # Stelle die freeplaces.txt aus dem Artefakt wieder her
          cp./artifacts/freeplaces.txt.

          # Lese den aktuellen Wert aus der wiederhergestellten Datei
          CURRENT_STALLS=$(cat freeplaces.txt)

          curl -H "Content-Type: application/json" -X POST -d '{"content": "Die Anzahl der freien Stallplätze hat sich geändert! Aktuell sind '$CURRENT_STALLS' Plätze frei."}' "${{ secrets.DISCORD_WEBHOOK_URL }}"